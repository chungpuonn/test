<?xml version="1.0"?>
<robot name="prototype2" xmlns:xacro="https://www.ros.org/wiki/xacro">
  <!-- <xacro:include filename="$(find mobileman_simulation)/urdf/wheel.xacro" /> -->
  <xacro:include filename="$(find mobileman_simulation)/urdf/wheel.xacro" />
  <!--use simulation-->
  <xacro:property name="isSimulation" value="true" />
  <!--baselink name-->
  <xacro:property name="base_link" value="base_link" />
  <!--robot name-->
  <xacro:property name="robot_name" value="/prototype2" />

  <!--Robot Chassis-->
  <!-- <xacro:include filename="$(find mobileman_simulation)/urdf/base_footprint.xacro"/> -->

  <xacro:include filename="$(find mobileman_simulation)/urdf/chassis.xacro" />

  <!-- dumylink for robot chasis inertial -->
  <xacro:include filename="$(find mobileman_simulation)/urdf/parts/dummy_link.xacro" />
  <!--Wheels-->
  <xacro:link_wheel name="front_left" radius="0.2155" />
  <xacro:joint_wheel name="front_left" origin_xyz="0 0.257 -0.0" />

  <xacro:link_wheel name="front_right" radius="0.2155" />
  <xacro:joint_wheel name="front_right" origin_xyz="0 -0.257 -0.0" />

  <xacro:link_wheel name="rear_left" radius="0.131" />
  <xacro:joint_wheel name="rear_left" origin_xyz="-0.547 0.257 -0.0845" />

  <xacro:link_wheel name="rear_right" radius="0.131" />
  <xacro:joint_wheel name="rear_right" origin_xyz="-0.547 -0.257 -0.0845" />

  <!--fork_lift-->
  <xacro:include filename="$(find mobileman_simulation)/urdf/fork_lift.xacro" />

  <!--IMU-->
  <xacro:include filename="$(find mobileman_simulation)/urdf/imu.xacro" />

  <!--Laser Scanner-->
  <xacro:include filename="$(find mobileman_simulation)/urdf/hokuyo.xacro" />

  <link name="base_footprint"></link>
  <joint name="base_foot_joint" type="fixed">
    <parent link="base_footprint" />
    <child link="${base_link}" />
    <origin xyz="0 0 0.2155" rpy="0 0 0" />
  </joint>

  <!-- Photoneo 3d scanner -->
  <xacro:include filename="$(find mobileman_simulation)/urdf/photoneo_3d_scanner.xacro" />

  <link name="photoneo_2d_camera">
    <visual>
      <origin rpy="1.57 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="0.002" radius="0.02" />
      </geometry>
    </visual>
  </link>

  <joint name="photoneo_2d_camera_joint" type="fixed">
    <parent link="c5_link" />
    <child link="photoneo_2d_camera" />
    <origin xyz="0.035 -0.15 0" rpy="3.142 0 1.57" />
  </joint>

  <gazebo reference="photoneo_2d_camera">
    <material>Gazebo/Blue</material>
  </gazebo>

  <link name="2d_camera_optical_link"></link>

  <joint name="2d_camera_link_joint" type="fixed">
    <origin xyz="0 0.05 0" rpy="3.142 0 1.571" />
    <parent link="photoneo_2d_camera" />
    <child link="2d_camera_optical_link" />
  </joint>

  <!-- 2d camera -->
  <gazebo reference="2d_camera_optical_link">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="2d_camera">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>2d_camera1</cameraName>
        <imageTopicName>/2d/image_raw</imageTopicName>
        <cameraInfoTopicName>/2d/camera_info</cameraInfoTopicName>
        <frameName>2d_camera_optical_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>


  <!-- differetial driver controller -->
  <xacro:if value="${isSimulation}">
    <!--    either differtial_drive_controller should be used or the transmission should be used. -->
    <xacro:include filename="$(find mobileman_simulation)/urdf/differential_drive_controller.xacro" />
    <!-- <transmission name="left_wheel">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="front_left_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
      <actuator name="left_motor">
        <mechanicalReduction>50</mechanicalReduction>
      </actuator>
    </transmission>

    <transmission name="right_wheel">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="front_right_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
      <actuator name="right_motor">
        <mechanicalReduction>50</mechanicalReduction>
      </actuator>
    </transmission> -->

    <transmission name="3d_scanner">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="photoneo_pan_joint">
        <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      </joint>
      <actuator name="3d_scanner_motor">
        <mechanicalReduction>50</mechanicalReduction>
      </actuator>
    </transmission>

    <transmission name="3d_scanner">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="photoneo_tilt_joint">
        <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      </joint>
      <actuator name="3d_scanner_motor">
        <mechanicalReduction>50</mechanicalReduction>
      </actuator>
    </transmission>

    <!--ros control plugin-->
    <gazebo>
      <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        <robotNamespace>/</robotNamespace>
        <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      </plugin>
    </gazebo>

    <gazebo>
      <plugin name="joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
        <joint_name>fork_rotational_joint, fork_linear_joint, photoneo_3d_scanner_joint, front_left_joint, front_right_joint, rear_left_joint, rear_right_joint</joint_name>
      </plugin>
    </gazebo>

    <gazebo reference="front_left_joint">
      <mu1 value="1.0" />
      <mu2 value="1.0" />
      <kp value="1000000.0" />
      <kd value="1.0" />
      <!-- <material>Gazebo/Blue</material> -->
    </gazebo>

    <gazebo reference="front_right_joint">
      <mu1 value="1.0" />
      <mu2 value="1.0" />
      <kp value="1000000.0" />
      <kd value="1.0" />
      <!-- <material>Gazebo/Blue</material> -->
    </gazebo>

  </xacro:if>

</robot>